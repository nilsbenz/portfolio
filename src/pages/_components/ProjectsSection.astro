---
import { buttonVariants } from "@/components/ui/button";
import CardLink from "@/components/utils/CardLink.astro";
import { getLang, useTranslations } from "@/i18n/utils";
import { sortProjects } from "@/lib/projects";
import { cn } from "@/lib/utils";
import { getCollection } from "astro:content";
import { getRelativeLocaleUrl } from "astro:i18n";
import { ExternalLinkIcon } from "lucide-react";

const lang = getLang(Astro.currentLocale, Astro.url);
const t = useTranslations(lang);

const pages = await getCollection("projects");
const translatedProjects = pages.reduce(
  (projects, project) => {
    const [lang, id] = project.id.split("/");
    if (!projects[id]) {
      projects[id] = {};
    }
    projects[id][lang] = project;
    return projects;
  },
  {} as Record<string, Record<string, (typeof pages)[number]>>,
);
const projects = Object.values(translatedProjects)
  .map(
    (translatedProjects) =>
      translatedProjects[lang] || translatedProjects["en"],
  )
  .filter((project) => project.data.featured)
  .sort(sortProjects);
---

<div class="space-y-6 pt-16">
  <h3 class="subtitle">{t("home.projects.title")}</h3>
  <div class="grid grid-cols-1 gap-6 sm:grid-cols-2">
    {
      projects.map((project) => (
        <CardLink
          href={getRelativeLocaleUrl(
            lang,
            `/projects/${project.id.split("/")[1]}/`,
          )}
          image={project.data.thumbnail}
          title={project.data.title}
          icon={project.data.icon}
        >
          {project.data.description}
        </CardLink>
      ))
    }
  </div>
  <div class="flex justify-center">
    <a
      href={getRelativeLocaleUrl(lang, "/projects/")}
      class={cn(
        buttonVariants({ variant: "outline", size: "lg" }),
        "max-w-xs sm:w-full",
      )}
    >
      <ExternalLinkIcon />
      {t("home.projects.viewAll")}
    </a>
  </div>
</div>
